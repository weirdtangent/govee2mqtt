name: Release and Docker Deploy

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 3 1 * *"  # Monthly rebuild at 03:00 UTC on the 1st

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  lint:
    name: Lint (ruff/black)
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      # If your dev tools (ruff/black/rst-lint/rich/etc.) are in optional-dependencies
      # like [project.optional-dependencies.dev], this installs them.
      - name: Install project (dev)
        run: uv sync --all-extras --dev

      - name: Ruff
        run: uv run ruff check src

      - name: Black
        run: |
          uv run black --version
          uv run black --check --color --diff .

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [lint]
    if: github.event_name != 'schedule'
    outputs:
      published: ${{ steps.semrel.outputs.new_release_published }}
      version: ${{ steps.semrel.outputs.new_release_version }}
      tag: ${{ steps.semrel.outputs.new_release_git_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: semrel
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/npm

  docker:
    name: Build and Push Docker Image
    needs: [release]
    if: github.event_name == 'schedule' || needs.release.result == 'success'
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ needs.release.outputs.version }}
      RELEASE_TAG: ${{ needs.release.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: graystorm/govee2mqtt
          tags: |
            type=raw,value=${{ env.RELEASE_TAG }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=govee2mqtt
            org.opencontainers.image.description=Publishes Govee device data to MQTT for Home Assistant
            org.opencontainers.image.url=https://www.graystorm.com
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}#readme
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ env.RELEASE_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true
